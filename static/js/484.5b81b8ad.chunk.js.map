{"version":3,"file":"static/js/484.5b81b8ad.chunk.js","mappings":"iQAEaA,E,OAAaC,GAAAA,GAAH,+E,SCwDvB,EArDgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiCA,OA/BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,IAAIC,gBADH,wCAEd,WAA4BP,GAA5B,gFACEQ,EAAAA,EAAAA,SAAAA,QAAA,6CAA+DR,EAA/D,YACgB,mCACVS,EAAS,CACbC,QAFc,oCAFlB,kBAO2BF,EAAAA,EAAAA,IAAU,GAAI,CAAEC,OAAAA,EAAQE,OAAQL,EAAKK,SAPhE,OAOUC,EAPV,OAQIR,EACEQ,EAASC,KAAKC,QAAQC,KAAI,SAAAC,GACxB,MAAO,CACLC,GAAID,EAAEC,GACNC,OAAQF,EAAEE,OACVC,QAASH,EAAEG,QAEd,KAfP,kDAkBIC,QAAQC,IAAI,KAAMC,SAlBtB,0DAFc,wBA0Bd,OA1Bc,oCAwBdC,CAAavB,GAEN,WACLM,EAAKkB,OACN,CACF,GAAE,CAACxB,IAECG,EAAQsB,QAIT,wBACGtB,EAAQY,KAAI,SAAAC,GACX,OACE,UAAClB,EAAD,YACE,qCAAakB,EAAEE,OAAf,QACA,uBAAIF,EAAEG,YAFSH,EAAEC,GAKtB,OAXE,mEAeV,C","sources":["components/Reviews/Reviews.style.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { ReviewItem } from './Reviews.style';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const ctrl = new AbortController();\n    async function fetchReviews(movieId) {\n      axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n      const API_KEY = '8e9be2f5936cb349aea9f629442792e4';\n      const params = {\n        api_key: API_KEY,\n      };\n      try {\n        const response = await axios.get('', { params, signal: ctrl.signal });\n        setReviews(\n          response.data.results.map(r => {\n            return {\n              id: r.id,\n              author: r.author,\n              content: r.content,\n            };\n          })\n        );\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    fetchReviews(movieId);\n\n    return () => {\n      ctrl.abort();\n    };\n  }, [movieId]);\n\n  if (!reviews.length) {\n    return <p>We don't have any reviews for this movie</p>;\n  } else {\n    return (\n      <ul>\n        {reviews.map(r => {\n          return (\n            <ReviewItem key={r.id}>\n              <h4>Author: {r.author}.</h4>\n              <p>{r.content}</p>\n            </ReviewItem>\n          );\n        })}\n      </ul>\n    );\n  }\n};\n\nexport default Reviews;\n"],"names":["ReviewItem","styled","movieId","useParams","useState","reviews","setReviews","useEffect","ctrl","AbortController","axios","params","api_key","signal","response","data","results","map","r","id","author","content","console","log","message","fetchReviews","abort","length"],"sourceRoot":""}