{"version":3,"file":"static/js/81.79fe8361.chunk.js","mappings":"yRAEaA,EAASC,EAAAA,GAAAA,IAAH,qGAMNC,EAASD,EAAAA,GAAAA,IAAH,kEAKNE,EAAaF,EAAAA,GAAAA,GAAH,8EAMVG,EAAaH,EAAAA,GAAAA,GAAH,8EAMVI,EAAgBJ,EAAAA,GAAAA,IAAH,mF,SCbpBK,EAAa,CACjBC,QAAS,eACTC,OAAQ,iBACRC,aAAc,MACdC,eAAgB,OAChBC,MAAO,QACPC,aAAc,MACdC,QAAS,SAsFX,EAnFqB,WAAO,IAAD,UACzB,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAgCjB,OA9BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,IAAIC,gBADH,wCAEd,WAAyBN,GAAzB,gFACEO,EAAAA,EAAAA,SAAAA,QAAA,6CAA+DP,GAC/C,mCACVQ,EAAS,CACbC,QAFc,oCAFlB,kBAO2BF,EAAAA,EAAAA,IAAU,GAAI,CAAEC,OAAAA,EAAQE,OAAQL,EAAKK,SAPhE,OAOUC,EAPV,OAQIZ,EAAQ,CACNa,YAAaD,EAASE,KAAKD,YAC3BE,eAAgBH,EAASE,KAAKC,eAC9BC,aAAcJ,EAASE,KAAKE,aAC5BC,aAAcL,EAASE,KAAKG,aAC5BC,SAAUN,EAASE,KAAKI,SACxBC,OAAQP,EAASE,KAAKK,SAd5B,kDAiBIC,QAAQC,IAAI,KAAMC,SAjBtB,0DAFc,wBAyBd,OAzBc,oCAuBdC,CAAUtB,GAEH,WACLK,EAAKkB,OACN,CACF,GAAE,CAACvB,KAGF,iCACE,SAAC,KAAD,CAAMwB,GAAE,UAAEtB,EAASuB,aAAX,aAAE,EAAgBC,KAAMC,MAAOtC,EAAvC,6BAGA,UAACN,EAAD,YACE,SAACE,EAAD,CACE2C,IAAG,8CAAyC9B,EAAKc,aACjDiB,IAAI,cACJC,MAAM,SAER,4BACE,kCAAQhC,EAAKgB,eAAb,uBACEhB,EAAKiB,oBADP,aACE,EAAmBgB,MAAM,KAAK,GADhC,QAGA,wCAAgBjC,EAAKkB,iBACrB,sCACA,uBAAIlB,EAAKmB,YACT,oCACA,SAAC/B,EAAD,oBACGY,EAAKoB,cADR,aACG,EAAac,KAAI,SAAAC,GAChB,OAAO,SAAC9C,EAAD,UAA4B8C,EAAMC,MAAjBD,EAAME,GAC/B,aAIP,UAAC/C,EAAD,YACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMoC,GAAG,OAAOC,MAAO,CAAEC,KAAI,UAAExB,EAASuB,aAAX,aAAE,EAAgBC,MAA/C,qBAIF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,UAAExB,EAASuB,aAAX,aAAE,EAAgBC,MAAlD,8BAMN,SAAC,EAAAU,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails/MovieDetails.style.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BigDiv = styled.div`\n  display: flex;\n  padding-bottom: 10px;\n  border-bottom: 1px solid gray;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  margin-right: 20px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const GenresItem = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const AdditionalDiv = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid gray;\n`;\n","import { Suspense, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport {\n  AdditionalDiv,\n  BigDiv,\n  GenresItem,\n  GenresList,\n  Poster,\n} from './MovieDetails.style';\n\nconst StyledLink = {\n  display: 'inline-block',\n  border: '1px solid gray',\n  borderRadius: '3px',\n  textDecoration: 'none',\n  color: 'black',\n  marginBottom: '5px',\n  padding: '0 5px',\n};\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const ctrl = new AbortController();\n    async function fetchFilm(movieId) {\n      axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movieId}`;\n      const API_KEY = '8e9be2f5936cb349aea9f629442792e4';\n      const params = {\n        api_key: API_KEY,\n      };\n      try {\n        const response = await axios.get('', { params, signal: ctrl.signal });\n        setFilm({\n          poster_path: response.data.poster_path,\n          original_title: response.data.original_title,\n          release_date: response.data.release_date,\n          vote_average: response.data.vote_average,\n          overview: response.data.overview,\n          genres: response.data.genres,\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    fetchFilm(movieId);\n\n    return () => {\n      ctrl.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location.state?.from} style={StyledLink}>\n        ‚Üê Go back\n      </Link>\n      <BigDiv>\n        <Poster\n          src={`https://image.tmdb.org/t/p/original/${film.poster_path}`}\n          alt=\"Film poster\"\n          width=\"300\"\n        />\n        <div>\n          <h2>{`${film.original_title} (${\n            film.release_date?.split('-')[0]\n          })`}</h2>\n          <p>User Score: {film.vote_average}</p>\n          <h3>Overview</h3>\n          <p>{film.overview}</p>\n          <h4>Genres</h4>\n          <GenresList>\n            {film.genres?.map(genre => {\n              return <GenresItem key={genre.id}>{genre.name}</GenresItem>;\n            })}\n          </GenresList>\n        </div>\n      </BigDiv>\n      <AdditionalDiv>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: location.state?.from }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location.state?.from }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </AdditionalDiv>\n      <Suspense fallback={<div>Loading page...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BigDiv","styled","Poster","GenresList","GenresItem","AdditionalDiv","StyledLink","display","border","borderRadius","textDecoration","color","marginBottom","padding","useState","film","setFilm","movieId","useParams","location","useLocation","useEffect","ctrl","AbortController","axios","params","api_key","signal","response","poster_path","data","original_title","release_date","vote_average","overview","genres","console","log","message","fetchFilm","abort","to","state","from","style","src","alt","width","split","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}