{"version":3,"file":"static/js/713.850435ae.chunk.js","mappings":"iQAEaA,E,OAAWC,GAAAA,GAAH,+E,SC4DrB,EAzDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAkCA,OAhCAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,IAAIC,gBADH,wCAEd,WAAyBP,GAAzB,gFACEQ,EAAAA,EAAAA,SAAAA,QAAA,6CAA+DR,EAA/D,YACgB,mCACVS,EAAS,CACbC,QAFc,oCAFlB,kBAO2BF,EAAAA,EAAAA,IAAU,GAAI,CAAEC,OAAAA,EAAQE,OAAQL,EAAKK,SAPhE,OAOUC,EAPV,OAQIR,EACEQ,EAASC,KAAKV,KAAKW,KAAI,SAAAC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,aAAcF,EAAIE,aAClBC,KAAMH,EAAIG,KACVC,UAAWJ,EAAII,UAElB,KAhBP,kDAmBIC,QAAQC,IAAI,KAAMC,SAnBtB,0DAFc,wBA2Bd,OA3Bc,oCAyBdC,CAAUvB,GAEH,WACLM,EAAKkB,OACN,CACF,GAAE,CAACxB,KAGF,wBACGG,EAAKW,KAAI,SAAAC,GACR,OACE,UAACjB,EAAD,YACE,gBACE2B,IAAG,8CAAyCV,EAAIE,cAChDS,IAAI,kBACJC,MAAM,SAER,kBACCZ,EAAIG,MACL,kBARF,cAScH,EAAII,YATHJ,EAAIC,GAYtB,KAGN,C","sources":["components/Cast/Cast.style.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { CastItem } from './Cast.style';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const ctrl = new AbortController();\n    async function fetchCast(movieId) {\n      axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n      const API_KEY = '8e9be2f5936cb349aea9f629442792e4';\n      const params = {\n        api_key: API_KEY,\n      };\n      try {\n        const response = await axios.get('', { params, signal: ctrl.signal });\n        setCast(\n          response.data.cast.map(act => {\n            return {\n              id: act.id,\n              profile_path: act.profile_path,\n              name: act.name,\n              character: act.character,\n            };\n          })\n        );\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    fetchCast(movieId);\n\n    return () => {\n      ctrl.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast.map(act => {\n        return (\n          <CastItem key={act.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/original/${act.profile_path}`}\n              alt=\"Actor's profile\"\n              width=\"100\"\n            />\n            <br />\n            {act.name}\n            <br />\n            Character: {act.character}\n          </CastItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["CastItem","styled","movieId","useParams","useState","cast","setCast","useEffect","ctrl","AbortController","axios","params","api_key","signal","response","data","map","act","id","profile_path","name","character","console","log","message","fetchCast","abort","src","alt","width"],"sourceRoot":""}